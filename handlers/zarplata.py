
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è (—ç—Ç–∞–ø—ã)
class SalaryCalc(StatesGroup):
    deposit = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–Ω–∞–∑–∞–¥"
back_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")]],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
@router.message(Command("cash"))
async def open_cash_webapp(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å CASH üíµ", web_app=WebAppInfo(url="https://zarplata-one.vercel.app/"))]
    ])
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Web App:", reply_markup=keyboard)

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
@router.message(F.text == "/zarplata")
async def start_salary_calc(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ —Ä—É–±–ª—è—Ö:", reply_markup=back_kb)
    await state.set_state(SalaryCalc.deposit)
